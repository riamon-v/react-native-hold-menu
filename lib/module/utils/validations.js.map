{"version":3,"sources":["validations.ts"],"names":["fieldAreSame","obj1","obj2","areObjectsSame","keys","Object","forEach","key","val1","val2","toString","deepEqual","array1","array2","areEqual","areArrays","Array","isArray","areSameLength","length","menuItem","index","isFieldsAreSame"],"mappings":"AAEA,SAASA,YAAT,CAAsBC,IAAtB,EAA2CC,IAA3C,EAAgE;AAC9D;;AACA,MAAIC,cAAc,GAAG,IAArB;AAEA,QAAMC,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYH,IAAZ,CAAb;AAEAG,EAAAA,IAAI,CAACE,OAAL,CAAaC,GAAG,IAAI;AAClB;AACA,UAAMC,IAAI,GAAGP,IAAI,CAACM,GAAD,CAAjB,CAFkB,CAGlB;;AACA,UAAME,IAAI,GAAGP,IAAI,CAACK,GAAD,CAAjB;;AAEA,QAAIC,IAAI,KAAKC,IAAb,EAAmB;AACjB,UAAI,OAAOD,IAAP,KAAgB,UAAhB,IAA8B,OAAOC,IAAP,KAAgB,UAAlD,EACEN,cAAc,GAAGK,IAAI,CAACE,QAAL,OAAoBD,IAAI,CAACC,QAAL,EAArC,CADF,KAEKP,cAAc,GAAG,KAAjB;AACN;AACF,GAXD;AAaA,SAAOA,cAAP;AACD;;AAED,SAASQ,SAAT,CAAmBC,MAAnB,EAA4CC,MAA5C,EAAqE;AACnE;;AACA,MAAIC,QAAQ,GAAG,IAAf;AAEA,QAAMC,SAAS,GAAGC,KAAK,CAACC,OAAN,CAAcL,MAAd,KAAyBI,KAAK,CAACC,OAAN,CAAcJ,MAAd,CAA3C;AACA,QAAMK,aAAa,GAAGH,SAAS,IAAIF,MAAb,IAAuBD,MAAM,CAACO,MAAP,KAAkBN,MAAM,CAACM,MAAtE;;AAEA,MAAIJ,SAAS,IAAIG,aAAb,IAA8BL,MAAlC,EAA0C;AACxCD,IAAAA,MAAM,CAACN,OAAP,CAAe,CAACc,QAAD,EAA0BC,KAA1B,KAAoC;AACjD,YAAMpB,IAAI,GAAGmB,QAAb;AACA,YAAMlB,IAAI,GAAGW,MAAM,CAACQ,KAAD,CAAnB;AAEA,YAAMC,eAAe,GAAGtB,YAAY,CAACC,IAAD,EAAOC,IAAP,CAApC;AACA,UAAI,CAACoB,eAAL,EAAsBR,QAAQ,GAAG,KAAX;AACvB,KAND;AAOD,GARD,MAQOA,QAAQ,GAAG,KAAX;;AAEP,SAAOA,QAAP;AACD;;AAED,SAASH,SAAT","sourcesContent":["import { MenuItemProps } from '../components/menu/types';\n\nfunction fieldAreSame(obj1: MenuItemProps, obj2: MenuItemProps) {\n  'worklet';\n  let areObjectsSame = true;\n\n  const keys = Object.keys(obj1);\n\n  keys.forEach(key => {\n    // @ts-ignore\n    const val1 = obj1[key];\n    // @ts-ignore\n    const val2 = obj2[key];\n\n    if (val1 !== val2) {\n      if (typeof val1 === 'function' && typeof val2 === 'function')\n        areObjectsSame = val1.toString() === val2.toString();\n      else areObjectsSame = false;\n    }\n  });\n\n  return areObjectsSame;\n}\n\nfunction deepEqual(array1: MenuItemProps[], array2: MenuItemProps[]) {\n  'worklet';\n  let areEqual = true;\n\n  const areArrays = Array.isArray(array1) && Array.isArray(array2);\n  const areSameLength = areArrays && array2 && array1.length === array2.length;\n\n  if (areArrays && areSameLength && array2) {\n    array1.forEach((menuItem: MenuItemProps, index) => {\n      const obj1 = menuItem;\n      const obj2 = array2[index];\n\n      const isFieldsAreSame = fieldAreSame(obj1, obj2);\n      if (!isFieldsAreSame) areEqual = false;\n    });\n  } else areEqual = false;\n\n  return areEqual;\n}\n\nexport { deepEqual };\n"]}